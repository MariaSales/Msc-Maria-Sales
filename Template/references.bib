@inproceedings{Reynoso2005,
abstract = {Diagram-based UML notation is limited in its expressiveness thus producing a model that would be severely underspecified. The flaws in the limitation of the UML diagrams are solved by specifying UML/OCL combined models, OCL being an essential add-on to the UML diagrams. Aware of the importance of building precise models, the main goal of this paper is to carefully describe a family of experiments we have undertaken to ascertain whether any relationship exists between object coupling (defined through metrics related to navigations and collection operations) and two maintainability sub-characteristics: understandability and modifiability of OCL expressions. If such a relationship exists, we will have found early indicators of the understandability and modifiability of OCL expressions. Even though the results obtained show empirical evidence that such a relationship exists, they must be considered as preliminaries. Further validation is needed to be performed to strengthen the conclusions and external validity},
author = {Reynoso, L and Genero, M and Piattini, M and Manso, E},
booktitle = {11th IEEE International Software Metrics Symposium (METRICS'05)},
doi = {10.1109/METRICS.2005.12},
file = {:Users/mariasales/Desktop/MIG/2A/Tese/Bibliografia/2. SotA/Assessing the Impact of Coupling on the Understandability and Modifiability of OCL Expressions within UML$\backslash$:OCL Combined Models.pdf:pdf},
issn = {1530-1435},
keywords = {Computer architecture,Formal specifications,Navigation,OCL expression modifiability,OCL expression understandability,Object oriented modeling,Programming,Software architecture,Software quality,Software standards,Standards development,UML model,Unified Modeling Language,Unified modeling language,diagram-based UML notation,formal specification,object coupling,object-oriented languages,object-oriented programming,software maintenance,software metrics},
pages = {10 pp.--14},
title = {{Assessing the impact of coupling on the understandability and modifiability of OCL expressions within UML/OCL combined models}},
year = {2005}
}
@article{Sarkar2015,
abstract = {We present an empirical study investigating the effect of syntax highlighting on program comprehension and its interaction with programming experience. Quantitative data was captured from 10 human subjects using an eye tracker during a controlled, randomised, within-subjects study. We observe that syntax highlighting significantly improves task completion time, and that this effect becomes weaker with an increase in programming experience.},
author = {Sarkar, Advait},
file = {:Users/mariasales/Desktop/MIG/2A/Tese/Bibliografia/2. SotA/The impact of syntax colouring on program comprehension.pdf:pdf},
journal = {26th Annual Conference of the Psychology of Programming Interest Group},
keywords = {POP-II.B. Program Comprehension,POP-III.D. Editors,POP-V.B. Eye-tracking},
title = {{The Impact of Syntax Colouring on Program Comprehension}},
year = {2015}
}
@inproceedings{Yusuf2007,
abstract = {Eye-tracking equipment is used to assess how well a subject comprehends UML class diagrams. The results of a study are presented in which eye movements are captured in a non-obtrusive manner as users performed various comprehension tasks on UML class diagrams. The goal of the study is to identify specific characteristics of UML class diagrams, such as layout, color, and stereotype usage that are most effective for supporting a given task. Results indicate subjects have a variation in the eye movements (i.e., how the subjects navigate the diagram) depending on their UML expertise and software-design ability to solve the given task. Layouts with additional semantic information about the design were found to be most effective and the use of class stereotypes seems to play a substantial role in comprehension of these diagrams.},
author = {Yusuf, Shehnaaz and Kagdi, Huzefa and Maletic, Jonathan I.},
booktitle = {IEEE International Conference on Program Comprehension},
doi = {10.1109/ICPC.2007.10},
file = {:Users/mariasales/Desktop/MIG/2A/Tese/Bibliografia/2. SotA/Assessing the Comprehension of UML Class Diagrams via Eye Tracking.pdf:pdf},
isbn = {0769528600},
issn = {1063-6897},
title = {{Assessing the comprehension of UML class diagrams via eye tracking}},
year = {2007}
}
@inproceedings{Briand2004,
abstract = {A distinctive feature of human behaviour is the widespread occurrence of cooperation among unrelated individuals. Explaining the maintenance of costly within-group cooperation is a challenge because the incentive to free ride on the efforts of other group members is expected to lead to decay of cooperation. However, the costs of cooperation can be diminished or overcome when there is competition at a higher level of organizational hierarchy. Here we show that competition between groups resolves the paradigmatic 'public goods' social dilemma and increases within-group cooperation and overall productivity. Further, group competition intensifies the moral emotions of anger and guilt associated with violations of the cooperative norm. The results suggest an important role for group conflict in the evolution of human cooperation and moral emotions.},
author = {Briand, L. C. and Labiche, Y. and Yan, H. D. and {Di Penta}, M.},
booktitle = {IEEE International Conference on Software Maintenance, ICSM},
doi = {10.1109/ICSM.2004.1357823},
file = {:Users/mariasales/Desktop/MIG/2A/Tese/Bibliografia/2. SotA/A  Controlled  Experiment  on  the  Impact  of  the  Object  Constraint  Language  in  UML-based  Maintenance .pdf:pdf},
isbn = {0962-8452 (Print)$\backslash$n0962-8452 (Linking)},
issn = {0962-8452},
keywords = {Contracts,Cost benefit analysis,Drives,Laboratories,Logic,Software engineering,Software quality,Systems engineering and theory,Text analysis,UML model,UML statechart,UML-based development,UML-based maintenance,Unified Modeling Language,Unified modeling language,constraint handling,object constraint language,object-oriented languages,software maintenance},
pages = {380--389},
pmid = {18826935},
title = {{A controlled experiment on the impact of the object constraint language in UML-based maintenance}},
year = {2004}
}
@article{Atkinson2003,
abstract = {Metamodeling is an essential foundation for MDD, but there's little consensus on the precise form it should take and role it should play. The authors analyze the underlying motivation for MDD and then derive a concrete set of requirements that a supporting infrastructure should satisfy. They discuss why the traditional "language definition" interpretation of metamodeling isn't a sufficient foundation and explain how it can be extended to unlock MDD's full potential.},
author = {Atkinson, Colin and K{\"{u}}hne, Thomas},
doi = {10.1109/MS.2003.1231149},
file = {:Users/mariasales/Desktop/MIG/2A/Tese/Bibliografia/2. SotA/Model-driven development- a metamodeling foundation.pdf:pdf},
isbn = {0740-7459},
issn = {07407459},
journal = {IEEE Software},
month = {9},
number = {5},
pages = {36--41},
pmid = {20955745},
title = {{Model-driven development: A metamodeling foundation}},
url = {http://ieeexplore.ieee.org/document/1231149/},
volume = {20},
year = {2003}
}
@article{Selic2003,
abstract = {The potential benefits of using models are significantly greater in software than in other engineering disciplines because of the potential for a seamless link between models and the systems they represent. Unfortunately, models have rarely produced anticipated benefits. The key lies in resolving pragmatic issues related to the artifacts and culture of the previous generation of software technologies.},
author = {Selic, Bran},
doi = {10.1109/MS.2003.1231146},
file = {:Users/mariasales/Desktop/MIG/2A/Tese/Bibliografia/2. SotA/SelicPragmatics.pdf:pdf},
isbn = {0740-7459 VO - 20},
issn = {07407459},
journal = {IEEE Software},
month = {9},
number = {5},
pages = {19--25},
title = {{The pragmatics of model-driven development}},
url = {http://ieeexplore.ieee.org/document/1231146/},
volume = {20},
year = {2003}
}
@article{Briand2005,
abstract = {The object constraint language (OCL) was introduced as part of the Unified Modeling Language (UML). Its main purpose is to make UML models more precise and unambiguous by providing a constraint language describing constraints that the UML diagrams alone do not convey, including class invariants, operation contracts, and statechart guard conditions. There is an ongoing debate regarding the usefulness of using OCL in UML-based development, questioning whether the additional effort and formality is worth the benefit. It is argued that natural language may be sufficient, and using OCL may not bring any tangible benefits. This debate is in fact similar to the discussion about the effectiveness of formal methods in software engineering, but in a much more specific context. This paper presents the results of two controlled experiments that investigate the impact of using OCL on three software engineering activities using UML analysis models: detection of model defects through inspections, comprehension of the system logic and functionality, and impact analysis of changes. The results show that, once past an initial learning curve, significant benefits can be obtained by using OCL in combination with UML analysis diagrams to form a precise UML analysis model. But, this result is however conditioned on providing substantial, thorough training to the experiment participants.},
author = {Briand, Lionel C. and Labiche, Yvan and {Di Penta}, Massimiliano and Yan-Bondoc, Han},
doi = {10.1109/TSE.2005.105},
file = {:Users/mariasales/Desktop/MIG/2A/Tese/Bibliografia/2. SotA/An Experimental Investigation of Formality in UML-Based Development.pdf:pdf},
isbn = {0098-5589},
issn = {00985589},
journal = {IEEE Transactions on Software Engineering},
keywords = {Comprehension of software models,OCL,Software engineering experimentation,UML},
title = {{An experimental investigation of formality in UML-based development}},
year = {2005}
}
@article{Reynoso2010,
abstract = {The aim of this paper is to present the definition of the measures for the import-coupling of OCL expressions, along with the empirical validation of these as early indicators of the maintainability of OCL expressions. This empirical validation has been carried out by means of an experiment and its replica, conducted with undergraduate students of Spanish and Argentinean universities, respectively. To perform this experimental activity, we have followed a cognitive theory-based approach, since the understanding of the cognitive demands that OCL expressions place on software engineers will allow us to examine in greater depth the real influence of import-coupling on the maintainability of OCL expressions. The empirical results, obtained through the analysis of the data from the experiment and its replica, first of all separately and then together after a meta-analysis study, reveal evidence suggesting that import-coupling exerts a certain amount of influence on the comprehensibility and modifiability of OCL expressions. The measures that have most influence on OCL expression comprehensibility are those related to problem objects (Number of Navigated Relationships (NNR), Weighted Number of Navigations (WNN), Depth of Navigations (DN) and Number of Attributes referred through Navigations (NAN)), relationships between problem objects (Number of Navigated Classes (NNC) and Number of Explicit Iterator variables (NEI)), as well as reified objects (Weighted Number of Collections Operations (WNCO)). On the other hand, it is only measures related to relationships between problem objects that are the main influence on OCL expression modifiability. The influence of import-coupling on the comprehensibility and modifiability of OCL expressions was reaffirmed through the cognitive complexity (i.e. we show that import-coupling affects the cognitive complexity and that the latter influences the comprehension and modification of OCL expressions). These results may have educational implications, apart from what they might mean for practitioners in the industry, as is explained in the conclusions.},
author = {Reynoso, Luis and Manso, Esperanza and Genero, Marcela and Piattini, Mario},
doi = {https://doi.org/10.1016/j.ins.2010.06.028},
file = {:Users/mariasales/Desktop/MIG/2A/Tese/Bibliografia/2. SotA/Assessing the influence of import-coupling on OCL expression maintainability A cognitive theory-based perspective.pdf:pdf},
issn = {0020-0255},
journal = {Information Sciences},
keywords = {Cognitive models,Comprehensibility,Experiments,Import-coupling,Maintainability,Mental models,Meta-analysis,Modifiability,OCL expressions,Software measures,UML/OCL models},
number = {20},
pages = {3837--3862},
title = {{Assessing the influence of import-coupling on OCL expression maintainability: A cognitive theory-based perspective}},
url = {http://www.sciencedirect.com/science/article/pii/S0020025510002896},
volume = {180},
year = {2010}
}
@misc{dresdenocltoolkit,
author = {Dresden, Technische Universitat},
booktitle = {lehrstuhl-softwaretechnologie},
title = {{Dresden OCL Toolkit}},
url = {http://www.dresden-ocl.org/},
urldate = {23-11-2018},
year = {2007},
note={Available: \url{http://www.dresden-ocl.org} Accessed: 2018-12-09}
}
@misc{eclipseocl, 
title={Eclipse OCL (Object Constraint Language)}, url={https://projects.eclipse.org/projects/modeling.mdt.ocl}, journal={projects.eclipse.org}, 
author={Guindon, Christopher and Team, Webdev}, 
year={2018}, 
month={6},
note={Available: \url{https://projects.eclipse.org/projects/modeling.mdt.ocl} Accessed: 2018-12-09}
}
@incollection{Reynoso2005Book,
author = {Reynoso, Luis and Genero, Marcela and Piattini, Mario},
booktitle = {Metrics for Software Conceptual Models},
doi = {10.1142/9781860946066_0005},
file = {:Users/mariasales/Desktop/MIG/2A/Tese/Bibliografia/MEASURING OCL EXPRESSIONS- AN APPROACH BASED ON COGNITIVE TECHNIQUES.pdf:pdf},
month = {1},
pages = {161--206},
publisher = {Imperial College Press, Distributed by World Scientific Publishing Co.},
title = {{Measuring Ocl Expressions: an Approach Based on Cognitive Techniques}},
url = {http://www.worldscientific.com/doi/abs/10.1142/9781860946066{\_}0005},
year = {2005}
}
@misc{uml2005,
abstract = {Large enterprise applications - the ones that execute core business applications, and keep a company going - must be more than just a bunch of code modules. They must be structured in a way that enables scalability, security, and robust execution under stressful conditions, and their structure - frequently referred to as their architecture - must be defined clearly enough that maintenance programmers can (quickly!) find and fix a bug that shows up long after the original authors have moved on to other projects. That is, these programs must be designed to work perfectly in many areas, and business functionality is not the only one (although it certainly is the essential core). Of course a well-designed architecture benefits any program, and not just the largest ones as we've singled out here. We mentioned large applications first because structure is a way of dealing with complexity, so the benefits of structure (and of modeling and design, as we'll demonstrate) compound as application size grows large. Another benefit of structure is that it enables code reuse: Design time is the easiest time to structure an application as a collection of self-contained modules or components. Eventually, enterprises build up a library of models of components, each one representing an implementation stored in a library of code modules. When another application needs the same functionality, the designer can quickly import its module from the library. At coding time, the developer can just as quickly import the code module into the application.},
author = {{Object Management Group}},
booktitle = {OMG'S},
title = {{What is UML | Unified Modeling Language}},
url = {http://www.uml.org/what-is-uml.htm},
urldate = {2018-12-09},
year = {2005},
note={Available: \url{http://www.uml.org/what-is-uml.htm} Accessed: 2018-12-09}
}
@inproceedings{Gueheneuc2006,
address = {New York, New York, USA},
author = {Gu{\'{e}}h{\'{e}}neuc, Yann-Ga{\"{e}}l},
booktitle = {Proceedings of the 2006 conference of the Center for Advanced Studies on Collaborative research - CASCON '06},
doi = {10.1145/1188966.1188968},
file = {:Users/mariasales/Desktop/MIG/2A/Tese/Bibliografia/2. SotA/TAUPE{\_}Towards{\_}understanding{\_}program{\_}comprehension.pdf:pdf},
pages = {1},
publisher = {ACM Press},
title = {{TAUPE: Towards Understanding program comprehension}},
url = {http://portal.acm.org/citation.cfm?doid=1188966.1188968},
year = {2006}
}
@inproceedings{Rambally1986,
abstract = {Readability and comprehensibility are among the most important attributes of a program. A program that is easy to read and understand is easier to test, maintain, and modify. Many factors affect program readability and comprehensibility, including variable names, internal documentation, modularity, and so on. This paper investigates the influence of color on program readability and comprehension. Three color schemes were used: Color-scheme-A used different colors to indicate the different blocks in a program; Color-scheme-B used different colors to identify the various statements function in the program; and the third color scheme was the usual black-and-white programs. This study showed that subjects who used programs with Color-scheme-B had the highest mean score for program comprehension, followed by those who used Color-scheme-A. Subjects who used black-and-white programs scored the lowest on the comprehension quiz.},
address = {New York, New York, USA},
author = {Rambally, Gerard K.},
booktitle = {Proceedings of the seventeenth SIGCSE technical symposium on Computer science education - SIGCSE '86},
doi = {10.1145/5600.5702},
file = {:Users/mariasales/Desktop/MIG/2A/Tese/Bibliografia/2. SotA/The-influence-of-color-on-program-readability-and-comprehensibility.pdf:pdf},
isbn = {0897911784},
issn = {00978418},
pages = {173--181},
publisher = {ACM Press},
title = {{The influence of color on program readability and comprehensibility}},
url = {http://portal.acm.org/citation.cfm?doid=5600.5702},
volume = {18},
year = {1986}
}
@article{Mehta2009,
abstract = {Existing research reports inconsistent findings with regard to the effect of color on cognitive task performances. Some research suggests that blue or green leads to better performances than red; other studies record the opposite. Current work reconciles this discrepancy. We demonstrate that red (versus blue) color induces primarily an avoidance (versus approach) motivation (study 1, n = 69) and that red enhances performance on a detail-oriented task, whereas blue enhances performance on a creative task (studies 2 and 3, n = 208 and 118). Further, we replicate these results in the domains of product design (study 4, n = 42) and persuasive message evaluation (study 5, n = 161) and show that these effects occur outside of individuals' consciousness (study 6, n = 68). We also provide process evidence suggesting that the activation of alternative motivations mediates the effect of color on cognitive task performances.},
annote = {Science, also widely referred to as Science Magazine, is the peer-reviewed academic journal of the American Association for the Advancement of Science (AAAS) and one of the world's top academic journals},
archivePrefix = {arXiv},
arxivId = {arXiv:1106.5958},
author = {Mehta, Ravi and Zhu, Rui},
doi = {10.1126/science.1169144},
eprint = {arXiv:1106.5958},
file = {:Users/mariasales/Desktop/MIG/2A/Tese/Bibliografia/2. SotA/Blue or Red? Exploring the Effect of Color on Cognitive Task Performances.pdf:pdf},
isbn = {1095-9203 (Electronic)},
issn = {00368075},
journal = {Science},
month = {2},
number = {5918},
pages = {1226--1229},
pmid = {19197022},
title = {{Blue or red? Exploring the effect of color on cognitive task performances}},
url = {http://www.sciencemag.org/cgi/doi/10.1126/science.1169144},
volume = {323},
year = {2009}
}
@article{Toval2003,
abstract = {The Object Constraint Language (OCL) is a notational language for analysis and design of software systems, which is used in conjunction with the Unified Modelling Language (UML) to specify the semantics of the building blocks precisely. OCL can also be used by other languages, notations, methods and software tools in order to specify restrictions and other expressions of their models. Likewise, OCL is used by the Object Management Group (OMG) in the definition of other fast spreading industrial standards such as Meta Object Facility (MOF) or XML Metadata Interchange (XMI). Support tools aimed at making this language easier to use are becoming available. These tools are capable of supporting and handling OCL expressions. This paper presents a comparative study of the main tools currently available, both commercial and freely available ones. The study is very practical, with the advantages and disadvantages of the different tools being pointed out. The evaluations made may be of use in helping those developers and analysts who already use the language, as well as those who intend to use it in the near future, to choose the OCL tool which best adapts to their requirements.},
author = {Toval, Ambrosio and Requena, V$\backslash$'ictor and Fern{\'{a}}ndez, Jos{\'{e}} L},
doi = {10.1007/s10270-003-0031-0},
file = {:Users/mariasales/Desktop/MIG/2A/Tese/Bibliografia/2. SotA/Emerging OCL tools.pdf:pdf},
issn = {1619-1366},
journal = {Software and Systems Modeling},
month = {12},
number = {4},
pages = {248--261},
publisher = {Springer Berlin Heidelberg},
title = {{Emerging OCL tools}},
url = {http://dx.doi.org/10.1007/s10270-003-0031-0},
volume = {2},
year = {2003}
}
@misc{use,
booktitle = {The UML-based Specification Environment - USE: UML-based Specification Environment},
title = {{USE: The UML-based Specification Environment}},
url = {http://useocl.sourceforge.net/w/index.php/Main{\_}Page},
key={use},
note={Available: \url{https://sourceforge.net/p/useocl/wiki/} Accessed: 2018-12-09}
}

@misc{omg2017,
author = {{Object Management Group (OMG)}},
keywords = {OMG,Stantdard},
pages = {http://www.omg.org/},
title = {{OMG - Object Management Group}},
url = {http://www.omg.org/},
urldate = {2018-12-09},
year = {2017},
note={Available: \url{http://www.omg.org/} Accessed: 2018-12-09}
}

@misc{mda2014,
author = {{Object Management Group (OMG)}},
file = {:Users/mariasales/Desktop/MIG/2A/Tese/Bibliografia/2. SotA/Model Driven Architecture (MDA).pdf:pdf},
title = {{Model Driven Architecture - MDA Guide rev.2.0}},
url = {https://www.omg.org/cgi-bin/doc?ormsc/14-06-01},
year = {2014}
}
@techreport{ocl2014,
number = {February},
title = {{Object Constraint Language, version 2.4}},
url = {https://www.omg.org/spec/OCL/About-OCL/ http://www.omg.org/spec/OCL/2.4/PDF},
key={ocl},
year = {2014}
}
@article{Gogolla2007,
abstract = {The Unified Modeling Language (UML) is accepted today as an important standard for developing software. UML tools however provide little support for validating and checking models in early development phases. There is also no substantial support for the Object Constraint Language (OCL). We present an approach for the validation of UML models and OCL constraints based on animation and certification. The USE tool (UML-based Specification Environment) supports analysts, designers and developers in executing UML models and checking OCL constraints and thus enables them to employ model-driven techniques for software production. {\textcopyright} 2007 Elsevier B.V. All rights reserved.},
author = {Gogolla, Martin and B{\"{u}}ttner, Fabian and Richters, Mark},
doi = {10.1016/j.scico.2007.01.013},
file = {:Users/mariasales/Desktop/MIG/2A/Tese/Bibliografia/2. SotA/USE- A UML-based specification environment for validating UML and OCL.pdf:pdf},
isbn = {0167-6423},
issn = {01676423},
journal = {Science of Computer Programming},
keywords = {Constraint,Invariant,Model,Model certification,Model execution,Model validation,OCL,Pre- and post-conditions,UML},
number = {1-3},
pages = {27--34},
title = {{USE: A UML-based specification environment for validating UML and OCL}},
volume = {69},
year = {2007}
}
@article{Hannebauer2018,
abstract = {Hi0 (Li) defects in MgO undergo thermally activated reorientation motion at temperatures above 77 K. With the aid of the stochastic Liouville formalism we have studied the influence of such a motion on the EPR spectra. The contribution of both nonsecular and pseudosecular Hamiltonian terms to the averaging is discussed. It is shown that inclusion of pseudosecular terms in the simulation procedure is necessary in order to obtain agreement between the observed and the calculated spectra. Comparison between measured and simulated lines performed at different magnetic field orientations permits a precise determination of the jumping frequency $\omega$e as a function of temperature. The $\omega$e values follow an Arrhenius-type dependence on T with a barrier strength of 0.13 eV. Contributions to the line shapes from partially unresolved superhyperfine interactions are also discussed.},
author = {Hannebauer, Christoph and Hesenius, Marc and Gruhn, Volker},
doi = {10.1007/s10664-017-9579-0},
file = {:Users/mariasales/Desktop/MIG/2A/Tese/Bibliografia/2. SotA/ Does Syntax Highlighting Help Programming Novices?.pdf:pdf;:Users/mariasales/Desktop/MIG/2A/Tese/Bibliografia/2. SotA/Does syntax highlighting help programming novices?{\_}Full.pdf:pdf},
isbn = {9781450356381},
issn = {15737616},
journal = {Empirical Software Engineering},
keywords = {Code colouring,IDE interface,Program comprehension,Source code typography,Syntax highlighting},
number = {5},
pages = {2795--2828},
title = {{Does syntax highlighting help programming novices?}},
volume = {23},
year = {2018}
}
@book{Warmer2003,
abstract = {This guide explains how to add object constraint language (OCL) expressions to UML models, generate Java code from a combined UML/OCL model, and use OCL to define transformations for the model driven architecture (MDA). The second half of the book is a reference manual that reviews the context of OC},
author = {Warmer, Jos and Kleppe, Anneke},
doi = {10.5381/jot.2003.2.6.r1},
isbn = {0321179366},
journal = {The Journal of Object Technology},
pages = {139},
publisher = {Addison-Wesley},
title = {{The Object Constraint Language Second Edition, Getting Your Models Ready for MDA, by Jos Warmer and Anneke Kleppe.}},
url = {https://www.oreilly.com/library/view/object-constraint-language/0321179366/},
volume = {2},
year = {2003}
}
@misc{java,
    booktitle = {JAVA},
    title = {{JAVA}},
    url = {https://www.java.com/en/},
    key={java},
    note={Available: \url{https://www.java.com/en/} Accessed: 2019-03-18}
}
@misc{visitor,
    booktitle = {Visitor Pattern},
    title = {{Visitor Pattern}},
    url = {https://sourcemaking.com/design_patterns/visitor},
    key={visitor},
    note={Available: \url{https://sourcemaking.com/design_patterns/visitor} Accessed: 2019-03-18}
}
@misc {reflection,
    booktitle = {Using Java Reflection},
    title = {{Using Java Reflection}},
    url = {https://www.oracle.com/technetwork/articles/java/javareflection-1536171.html},
    key={reflection},
    note={Available: \url{https://www.oracle.com/technetwork/articles/java/javareflection-1536171.html} Accessed: 2019-06-21}
    
}





@inproceedings{GogollaHH14,
   author    = {Martin Gogolla and
                Lars Hamann and
                Frank Hilken},
   title     = {On Static and Dynamic Analysis of {UML} and {OCL}  
Transformation Models},
   booktitle = {Proceedings of the Workshop on Analysis of Model  
Transformations co-located
                with {ACM/IEEE} 17th International Conference on Model  
Driven Engineering
                Languages {\&} Systems (MoDELS 2014), Valencia, Spain,  
September
                29, 2014.},
   pages     = {24--33},
   year      = {2014},
   crossref  = {2014amt},
   url       = {http://ceur-ws.org/Vol-1277/3.pdf},
   timestamp = {Tue, 28 May 2019 16:23:34 +0200},
   biburl    = {https://dblp.org/rec/bib/conf/models/GogollaHH14}

}


@proceedings{2014amt,
   editor    = {J{\"{u}}rgen Dingel and
                Juan de Lara and
                Levi Lucio and
                Hans Vangheluwe},
   title     = {Proceedings of the Workshop on Analysis of Model  
Transformations co-located
                with {ACM/IEEE} 17th International Conference on Model  
Driven Engineering
                Languages {\&} Systems (MoDELS 2014), Valencia, Spain,  
September
                29, 2014},
   series    = {{CEUR} Workshop Proceedings},
   volume    = {1277},
   publisher = {CEUR-WS.org},
   year      = {2014},
   url       = {http://ceur-ws.org/Vol-1277},
   urn       = {urn:nbn:de:0074-1277-5},
   timestamp = {Tue, 28 May 2019 16:23:34 +0200},
   biburl    = {https://dblp.org/rec/bib/conf/models/2014amt}
}

@inproceedings{GogollaHHS15,
   author    = {Martin Gogolla and
                Lars Hamann and
                Frank Hilken and
                Matthias Sedlmeier},
   title     = {Checking {UML} and {OCL} Model Consistency: An  
Experience Report on
                a Middle-Sized Case Study},
   booktitle = {Tests and Proofs - 9th International Conference, {TAP}  
2015, Held
                as Part of {STAF} 2015, L'Aquila, Italy, July 22-24,  
2015. Proceedings},
   pages     = {129--136},
   year      = {2015},
   crossref  = {tap2015},
   url       = {https://doi.org/10.1007/978-3-319-21215-9\_8},
   doi       = {10.1007/978-3-319-21215-9\_8},
   timestamp = {Tue, 14 May 2019 10:00:44 +0200},
   biburl    = {https://dblp.org/rec/bib/conf/tap/GogollaHHS15}
}
@proceedings{tap2015,
   editor    = {Jasmin Christian Blanchette and
                Nikolai Kosmatov},
   title     = {Tests and Proofs - 9th International Conference, {TAP}  
2015, Held
                as Part of {STAF} 2015, L'Aquila, Italy, July 22-24,  
2015. Proceedings},
   series    = {Lecture Notes in Computer Science},
   volume    = {9154},
   publisher = {Springer},
   year      = {2015},
   url       = {https://doi.org/10.1007/978-3-319-21215-9},
   doi       = {10.1007/978-3-319-21215-9},
   isbn      = {978-3-319-21214-2},
   timestamp = {Tue, 14 May 2019 10:00:44 +0200},
   biburl    = {https://dblp.org/rec/bib/conf/tap/2015}
}

@inproceedings{Zamansky2016,
  title={Formal Methods in Collaborative Projects},
  author={Zamansky, Anna and Rodriguez-Navas, Guillermo and Adams, Mark and Spichkova, Maria},
  booktitle={ENASE},
  pages={396--402},
  doi={10.5220/0005937403960402},
  year={2016}
}

@InProceedings{Gogolla2004,
    author="Gogolla, Martin",
    editor="Llamos{\'i}, Albert
    and Strohmeier, Alfred",
    title="Benefits and Problems of Formal Methods",
    booktitle="Reliable Software Technologies - Ada-Europe 2004",
    year="2004",
    publisher="Springer Berlin Heidelberg",
    address="Berlin, Heidelberg",
    doi={10.1007/978-3-540-24841-5_1},
    pages="1--15",
    abstract="Formal methods for software development have been discussed for decades. This paper will try to explain when and under what circumstances formal methods and languages in general and the Object Constraint Language (OCL) in particular can be employed in a beneficial way. The success of using a formal approach is highly influenced by the expectations and pre-requisite knowledge of the developers, the role the formal support in the development process is given, and of course by the used tools.",
    isbn="978-3-540-24841-5"
}
@inproceedings{Kontio2004,
    abstract = {This paper reflects on three cases where the focus group method was used to obtain feedback and experiences from software engineering practitioners and application users. The focus group method and its background are presented, the method's weaknesses and strengths are discussed, and guidelines are provided for how to use the method in the software engineering + Helsinki School of Economics, Information Systems Science P.O.Box 1210, FIN-00101 Helsinki, Finland broader range of empirical methods available, so that appropriate methods can be selected and used for each research problem. Similar conclusions have been drawn in related fields [7,8,9]. There are several factors, context. Furthermore, the results of the three studies conducted are highlighted and the paper concludes in a discussion on the applicability of the method for this type of research. In summary, the focus group method is a cost-effective and quick empirical research approach for obtaining qualitative insights and feedback from practitioners. It can be used in several phases and types of research. However, a major limitation of the method is that it is useful only in studying concepts that can be understood by participants in a limited time. We also recommend that in the software engineering context, the method should be used with sufficient empirical rigor.},
    author = {Kontio, Jyrki and Lehtola, Laura and Bragge, Johanna},
    booktitle = {Proceedings - 2004 International Symposium on Empirical Software Engineering, ISESE 2004},
    doi={10.1109/ISESE.2004.1334914},
    isbn = {0769521657},
    keywords = {Empirical research,Focus group method,Group support systems,Qualitative research methods,Requirements prioritization,Risk management,Usability},
    pages = {271--280},
    publisher = {IEEE},
    title = {{Using the focus group method in software engineering: Obtaining practitioner and user experiences}},
    year = {2004}
}
@inproceedings{Cabot2006,
abstract = {Despite the importance of OCL in the specification of UML models, few existing metrics are devoted to measure the complexity of OCL expressions. The proposed ones are based on the syntactic structure of the expressions (number of referred attributes, number of navigations,{\ldots}) and on the constructs used in their definition (as the number of forAll and select iterators). Indeed, these metrics are helpful to determine, for instance, the understandability of the expressions but we believe they fall short when providing a precise measure of their complexity. In this paper we propose a new metric to compute the complexity of OCL expressions. Our metric is based on the number of objects involved in the evaluation of the expression. An expression e 1 is more complex than an expression e 2 if the number of objects required to evaluate e 1 is greater than the number of objects required to evaluate e 2 .},
author = {Cabot, Jordi and Teniente, Ernest},
booktitle = {In Model Size Metrics Workshop co-located with MODELS'06},
file = {:Users/mariasales/Desktop/MIG/2A/Tese/Bibliografia/A{\_}metric{\_}for{\_}measuring{\_}the{\_}complexity{\_}of{\_}OCL{\_}expre.pdf:pdf;::},
keywords = {complexity,metric,ocl},
title = {{A metric for measuring the complexity of OCL expressions}},
year = {2006}
}

@EditedBook{Ledru2004,
author = {Ledru, Yves and Dupuy-Chessa, Sophie and Fadil, Hind},
booktitle = {CAiSE Workshops},
editor = {Grundspenkis, J and Kirikova, M},
file = {:Users/mariasales/Desktop/MIG/2A/Tese/Bibliografia/Towards computer- aided design of OCL constraints.pdf:pdf},
pages = {329--338},
publisher = {Springer Berlin Heidelberg},
title = {{Towards Computer-aided Design of OCL Constraints}},
year = {2004}
}

@misc{useOCLHighlightPlugin,
  title = {OCL Highlight Plugin},
  howpublished = {\url{https://quasarresearchgroup.github.io/useOCLhighlight/}},
  note = {Accessed: 2020-09-24}
}

@misc{useOCLHighlightPluginDemo,
  title = {USE - OCL Highlight Plugin},
  howpublished = {\url{https://www.youtube.com/watch?v=ZVBQ7O5BFi8&t=16s
}},
  note = {Accessed: 2020-09-25}
}

@misc{useOCLComplexityPlugin,
  title = {OCL Complexity Plugin},
  howpublished = {\url{https://quasarresearchgroup.github.io/useOCLcomplexity/}},
  note = {Accessed: 2020-11-09}
}

@misc{javaxswing,
  title = {Package javax.swing},
  howpublished = {\url{https://docs.oracle.com/javase/7/docs/api/javax/swing/package-summary.html}},
  note = {Accessed: 2020-09-24}
}


@inproceedings{DBLP:conf/models/GogollaHH14,
   author    = {Martin Gogolla and
                Lars Hamann and
                Frank Hilken},
   title     = {On Static and Dynamic Analysis of {UML} and {OCL} 
Transformation Models},
   booktitle = {Proceedings of the Workshop on Analysis of Model 
Transformations co-located
                with {ACM/IEEE} 17th International Conference on Model 
Driven Engineering
                Languages {\&} Systems (MoDELS 2014), Valencia, Spain, 
September
                29, 2014.},
   pages     = {24--33},
   year      = {2014},
   crossref  = {DBLP:conf/models/2014amt},
   url       = {http://ceur-ws.org/Vol-1277/3.pdf},
   timestamp = {Tue, 28 May 2019 16:23:34 +0200},
   biburl    = {https://dblp.org/rec/bib/conf/models/GogollaHH14},
   bibsource = {dblp computer science bibliography, [https://dblp.org]}
}
@proceedings{DBLP:conf/models/2014amt,
   editor    = {J{\"{u}}rgen Dingel and
                Juan de Lara and
                Levi Lucio and
                Hans Vangheluwe},
   title     = {Proceedings of the Workshop on Analysis of Model 
Transformations co-located
                with {ACM/IEEE} 17th International Conference on Model 
Driven Engineering
                Languages {\&} Systems (MoDELS 2014), Valencia, Spain, 
September
                29, 2014},
   series    = {{CEUR} Workshop Proceedings},
   volume    = {1277},
   publisher = {CEUR-WS.org},
   year      = {2014},
   url       = {http://ceur-ws.org/Vol-1277},
   urn       = {urn:nbn:de:0074-1277-5},
   timestamp = {Tue, 28 May 2019 16:23:34 +0200},
   biburl    = {https://dblp.org/rec/bib/conf/models/2014amt},
   bibsource = {dblp computer science bibliography, [https://dblp.org]}
}

@inproceedings{DBLP:conf/tap/GogollaHHS15,
   author    = {Martin Gogolla and
                Lars Hamann and
                Frank Hilken and
                Matthias Sedlmeier},
   title     = {Checking {UML} and {OCL} Model Consistency: An 
Experience Report on
                a Middle-Sized Case Study},
   booktitle = {Tests and Proofs - 9th International Conference, {TAP} 
2015, Held
                as Part of {STAF} 2015, L'Aquila, Italy, July 22-24, 
2015. Proceedings},
   pages     = {129--136},
   year      = {2015},
   crossref  = {DBLP:conf/tap/2015},
   url       = {https://doi.org/10.1007/978-3-319-21215-9\_8},
   doi       = {10.1007/978-3-319-21215-9\_8},
   timestamp = {Tue, 14 May 2019 10:00:44 +0200},
   biburl    = {https://dblp.org/rec/bib/conf/tap/GogollaHHS15},
   bibsource = {dblp computer science bibliography, [https://dblp.org]}
}
@proceedings{DBLP:conf/tap/2015,
   editor    = {Jasmin Christian Blanchette and
                Nikolai Kosmatov},
   title     = {Tests and Proofs - 9th International Conference, {TAP} 
2015, Held
                as Part of {STAF} 2015, L'Aquila, Italy, July 22-24, 
2015. Proceedings},
   series    = {Lecture Notes in Computer Science},
   volume    = {9154},
   publisher = {Springer},
   year      = {2015},
   url       = {https://doi.org/10.1007/978-3-319-21215-9},
   doi       = {10.1007/978-3-319-21215-9},
   isbn      = {978-3-319-21214-2},
   timestamp = {Tue, 14 May 2019 10:00:44 +0200},
   biburl    = {https://dblp.org/rec/bib/conf/tap/2015},
   bibsource = {dblp computer science bibliography, [https://dblp.org]}
}

@article{sanja2013,
author = {Stajner, Sanja and Evans, Richard and Orasan, Constantin and Mitkov, Ruslan},
year = {2012},
month = {01},
pages = {14-22},
title = {What can readability measures really tell us about text complexity?},
journal = {Proceedings of Workshop on natural language processing for improving textual accessibility}
}

@misc{readable,
    booktitle = {Readable},
    title = {{Readable}},
    url = {https://readable.com/},
    note={Available: \url{https://readable.com/} Accessed: 2019-02-09}
}


@misc{github,
    booktitle = {GitHub},
    title = {{GitHub}},
    url = {https://github.com/},
    note={Available: \url{https://github.com/} Accessed: 2019-02-09}
}

